node(label: 'master') {
    stage ('Clone Repo') {
        // You may need to temporarily change this branch if you make updates to
        // the Python script and would like to test it with a non-master branch
        git branch: 'master', credentialsId: 'github-dvncaas-access-token', url: 'https://github.ford.com/DevEnablement/caas-workshop'
    }
    stage ('Registry Cleanup') {
        withCredentials([string(credentialsId: 'caas_workshop_quay', variable: 'QUAY_TOKEN')]) {
            dir('./scripts/workshop_cleanup') {
                sh 'python clean_registry.py devenablement/workshop ${QUAY_TOKEN}'
            }
        }
    }
    stage('Namespace Cleanup') {
        withEnv(["PATH+OC=${tool 'oc_4_3'}"]) {
            // I do each of these individually because using `all` causes a non-zero exit and failed pipeline
            // The `-n` specifies the namespace to operate on because you can't enter
            // a project while logged in as a very limited service account
            openshift.withCluster('Ford') {
                openshift.withProject('devenablement-workshop-dev') {
                    openshift.withCredentials('caas-workshop-clean-up') {
                        openshift.selector('bc', [source:'caas-workshop']).delete()
                        openshift.selector('deployment', [source:'caas-workshop']).delete()
                        openshift.selector('deploymentconfig', [source:'caas-workshop']).delete()
                        openshift.selector('imagestream', [source:'caas-workshop']).delete()
                        openshift.selector('route', [source:'caas-workshop']).delete()
                        openshift.selector('service', [source:'caas-workshop']).delete()
                    }
                }
            }
        }
    }
}

